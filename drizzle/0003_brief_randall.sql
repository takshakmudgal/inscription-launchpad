CREATE TYPE "public"."proposal_status" AS ENUM('active', 'leader', 'inscribing', 'inscribed', 'rejected', 'expired');--> statement-breakpoint
CREATE TYPE "public"."vote_type" AS ENUM('up', 'down');--> statement-breakpoint
CREATE TABLE "bitmemes_block_tracker" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "bitmemes_block_tracker_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"last_processed_block" integer NOT NULL,
	"last_processed_hash" varchar(64) NOT NULL,
	"last_checked" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "bitmemes_inscription" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "bitmemes_inscription_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"proposal_id" integer NOT NULL,
	"block_height" integer NOT NULL,
	"block_hash" varchar(64) NOT NULL,
	"txid" varchar(64) NOT NULL,
	"inscription_id" varchar(100),
	"inscription_url" text,
	"fee_rate" integer,
	"total_fees" bigint,
	"metadata" text,
	"unisat_order_id" varchar(100),
	"order_status" varchar(50),
	"payment_address" text,
	"payment_amount" bigint,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "bitmemes_proposal" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "bitmemes_proposal_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(50) NOT NULL,
	"ticker" varchar(10) NOT NULL,
	"description" varchar(280) NOT NULL,
	"website" text,
	"twitter" text,
	"telegram" text,
	"image_url" text NOT NULL,
	"banner_url" text,
	"submitted_by" integer,
	"votes_up" integer DEFAULT 0 NOT NULL,
	"votes_down" integer DEFAULT 0 NOT NULL,
	"total_votes" integer DEFAULT 0 NOT NULL,
	"status" "proposal_status" DEFAULT 'active' NOT NULL,
	"first_time_as_leader" timestamp with time zone,
	"leader_start_block" integer,
	"leaderboard_min_blocks" integer DEFAULT 2 NOT NULL,
	"expiration_block" integer,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "bitmemes_pump_fun_tokens" (
	"id" serial PRIMARY KEY NOT NULL,
	"proposal_id" integer NOT NULL,
	"mint_address" text NOT NULL,
	"transaction_signature" text NOT NULL,
	"metadata_uri" text NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "bitmemes_pump_fun_tokens_mint_address_unique" UNIQUE("mint_address"),
	CONSTRAINT "bitmemes_pump_fun_tokens_transaction_signature_unique" UNIQUE("transaction_signature")
);
--> statement-breakpoint
CREATE TABLE "bitmemes_user" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "bitmemes_user_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"wallet_address" varchar(62),
	"twitter_id" varchar(50),
	"username" varchar(50),
	"email" varchar(255),
	"twitter" varchar(50),
	"telegram" varchar(50),
	"bio" text,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "bitmemes_vote" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "bitmemes_vote_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" integer NOT NULL,
	"proposal_id" integer NOT NULL,
	"vote_type" "vote_type" NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
DROP TABLE "bitmemes_post" CASCADE;--> statement-breakpoint
ALTER TABLE "bitmemes_inscription" ADD CONSTRAINT "bitmemes_inscription_proposal_id_bitmemes_proposal_id_fk" FOREIGN KEY ("proposal_id") REFERENCES "public"."bitmemes_proposal"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "bitmemes_proposal" ADD CONSTRAINT "bitmemes_proposal_submitted_by_bitmemes_user_id_fk" FOREIGN KEY ("submitted_by") REFERENCES "public"."bitmemes_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "bitmemes_pump_fun_tokens" ADD CONSTRAINT "bitmemes_pump_fun_tokens_proposal_id_bitmemes_proposal_id_fk" FOREIGN KEY ("proposal_id") REFERENCES "public"."bitmemes_proposal"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "bitmemes_vote" ADD CONSTRAINT "bitmemes_vote_user_id_bitmemes_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."bitmemes_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "bitmemes_vote" ADD CONSTRAINT "bitmemes_vote_proposal_id_bitmemes_proposal_id_fk" FOREIGN KEY ("proposal_id") REFERENCES "public"."bitmemes_proposal"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "inscription_block_idx" ON "bitmemes_inscription" USING btree ("block_height");--> statement-breakpoint
CREATE INDEX "inscription_proposal_idx" ON "bitmemes_inscription" USING btree ("proposal_id");--> statement-breakpoint
CREATE INDEX "inscription_txid_idx" ON "bitmemes_inscription" USING btree ("txid");--> statement-breakpoint
CREATE INDEX "inscription_unisat_order_idx" ON "bitmemes_inscription" USING btree ("unisat_order_id");--> statement-breakpoint
CREATE INDEX "proposal_ticker_idx" ON "bitmemes_proposal" USING btree ("ticker");--> statement-breakpoint
CREATE INDEX "proposal_status_idx" ON "bitmemes_proposal" USING btree ("status");--> statement-breakpoint
CREATE INDEX "proposal_votes_idx" ON "bitmemes_proposal" USING btree ("total_votes");--> statement-breakpoint
CREATE INDEX "proposal_created_idx" ON "bitmemes_proposal" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "proposal_leader_time_idx" ON "bitmemes_proposal" USING btree ("first_time_as_leader");--> statement-breakpoint
CREATE INDEX "proposal_expiration_idx" ON "bitmemes_proposal" USING btree ("expiration_block");--> statement-breakpoint
CREATE INDEX "pump_fun_tokens_proposal_idx" ON "bitmemes_pump_fun_tokens" USING btree ("proposal_id");--> statement-breakpoint
CREATE INDEX "pump_fun_tokens_mint_address_idx" ON "bitmemes_pump_fun_tokens" USING btree ("mint_address");--> statement-breakpoint
CREATE INDEX "pump_fun_tokens_transaction_signature_idx" ON "bitmemes_pump_fun_tokens" USING btree ("transaction_signature");--> statement-breakpoint
CREATE INDEX "user_wallet_idx" ON "bitmemes_user" USING btree ("wallet_address");--> statement-breakpoint
CREATE INDEX "user_twitter_idx" ON "bitmemes_user" USING btree ("twitter_id");--> statement-breakpoint
CREATE INDEX "user_username_idx" ON "bitmemes_user" USING btree ("username");--> statement-breakpoint
CREATE INDEX "user_email_idx" ON "bitmemes_user" USING btree ("email");--> statement-breakpoint
CREATE INDEX "vote_user_idx" ON "bitmemes_vote" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "vote_proposal_idx" ON "bitmemes_vote" USING btree ("proposal_id");--> statement-breakpoint
CREATE INDEX "vote_user_proposal_idx" ON "bitmemes_vote" USING btree ("user_id","proposal_id");